name: Docker Image CI

on:
  push:
    tags:
      - v*          # 仅当推送 v 开头的标签时触发（如 v1.0.0）
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # ========== 1. 版本号处理 ==========
      - name: Get version
        id: vars
        run: |
          if [[ "$GITHUB_REF" == refs/tags/v* ]]; then
            version="${GITHUB_REF#refs/tags/v}"
            echo "version=$version" >> $GITHUB_OUTPUT
          else
            # 手动触发时生成唯一标识（日期+提交短SHA）
            sha_short=$(git rev-parse --short HEAD)
            echo "version=manual-$(date +%Y%m%d)-${sha_short}" >> $GITHUB_OUTPUT
          fi

      # ========== 2. 检出代码 ==========
      - uses: actions/checkout@v4

      # ========== 3. 初始化 Docker 环境 ==========
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # ========== 4. 登录 GitHub 容器注册中心 ==========
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}  # 需在仓库 Settings → Secrets 中配置

      # ========== 5. 构建并推送镜像 ==========
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/douyin:${{ steps.vars.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/douyin:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
